# 첨부파일 AI 분석 요약 기능 PRD

## 1. 프로젝트 개요
경비 시스템의 첨부파일 처리 기능을 개선하여, 단순 텍스트 추출을 넘어 AI 기반의 지능형 요약 기능을 제공한다.

## 2. 현재 상태
- 첨부파일 업로드 시 OCR을 통한 텍스트 전체 추출
- 추출된 텍스트를 그대로 저장 및 표시
- 문제점: 텍스트가 너무 길고 불필요한 정보가 많음

## 3. 목표
- 영수증 유형별 맞춤형 AI 요약 제공
- 사용자가 필요한 핵심 정보만 간결하게 표시
- 처리 단계를 세분화하여 진행 상황 명확히 표시

## 4. 주요 기능

### 4.1 영수증 유형 자동 분류
- 통신비 영수증 감지
- 일반 영수증 감지
- 기타 문서 감지

### 4.2 통신비 영수증 요약
- 전체 영수증 금액
- 통신 서비스 요금
- 부가 서비스 요금
- 기기 할부 요금
- 기타 요금

### 4.3 일반 영수증 요약
- 사용 위치: 상호명 (대략적인 주소)
- 전체 영수증 금액
- 주요 사용 내역별 금액

### 4.4 처리 단계 개선
현재: "분석 중" → "완료"
개선: "분석 중" → "추출 완료" → "요약 완료"

## 5. 기술 스펙

### 5.1 AI 모델
- Google Gemini Flash-lite 모델 사용
- API 키 관리 및 보안 처리

### 5.2 시스템 아키텍처
- 기존 OCR 텍스트 추출 유지 (Tesseract)
- 추출된 텍스트를 Gemini API로 전송
- 프롬프트 엔지니어링으로 유형별 요약 생성

### 5.3 데이터베이스 스키마 변경
- attachments 테이블에 요약 관련 필드 추가
  - summary_data (JSON): AI 요약 결과
  - receipt_type (string): 영수증 유형
  - processing_stage (enum): 분석중/추출완료/요약완료

## 6. 구현 계획

### Phase 1: 기반 구조 구축
- Gemini API 통합 설정
- 환경 변수 및 API 키 관리
- 기본 API 호출 서비스 구현

### Phase 2: 영수증 분류 및 요약 엔진
- 영수증 유형 분류 로직 구현
- 통신비 영수증 요약 프롬프트 개발
- 일반 영수증 요약 프롬프트 개발

### Phase 3: UI/UX 개선
- 처리 단계 표시 UI 업데이트
- 요약 결과 표시 컴포넌트 개발
- 원본 텍스트와 요약 토글 기능

### Phase 4: 백그라운드 처리
- 비동기 요약 처리 Job 구현
- 처리 상태 실시간 업데이트 (Turbo Streams)
- 에러 처리 및 재시도 로직

### Phase 5: 테스트 및 최적화
- 다양한 영수증 형식 테스트
- 프롬프트 최적화
- API 호출 비용 최적화

## 7. 성공 지표
- 요약 정확도 90% 이상
- 처리 시간 10초 이내
- 사용자 만족도 향상

## 8. 제약 사항
- Gemini API 일일 호출 제한 고려
- 개인정보 처리 시 보안 강화
- 요약 실패 시 기존 텍스트 표시

## 9. 향후 확장 가능성
- 다양한 문서 유형 지원
- 자동 경비 항목 매칭
- 중복 영수증 감지
- 예산 초과 알림 연동